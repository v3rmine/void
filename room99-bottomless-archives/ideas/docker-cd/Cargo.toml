[package]
name = "docker-cd"
version = "0.1.0"
edition = "2021"

[workspace]
members = [".", "entities", "migration", "xtask"]

[dependencies]
# Generate and verify passwords
argon2 = "0.4"
rand_core = { version = "0.6", features = ["std"] }
# Http server
axum = { version = "0.5", features = ["http2"] }
# Http / Https / Unix client
hyper = { version = "0.14", features = ["http1", "http2", "client"] }
hyper-tls = "0.5.0"
hyperlocal = { version = "0.8.0", default-features = false, features = ["client"] }
futures = { version = "0.3", default-features = false }
urlencoding = "2.1"
# Handle dates management
chrono = "0.4"
# SQL ORM
entities = { path = "./entities" }
sea-orm = { version = "0.8", features = ["sqlx-sqlite", "runtime-tokio-rustls", "debug-print"] }
# Load .env file in the environment
dotenvy = "0.15"
# Handle errors
eyre = "0.6"
color-eyre = { version = "0.6", default-features = false }
# Better syncronization primitives than std
parking_lot = { version = "0.12", features = ["arc_lock"] }
# Serialize and Deserialize everything
serde = { version = "1", features = ["derive"] }
# Serialize and Deserialize json
serde_json = "1"
# Async runtime
tokio = { version = "1", features = ["full"] }
# Logging
tower-http = { version = "0.3", features = ["trace"] }
tracing = "0.1"
tracing-appender = { version = "0.2", features = ["parking_lot"] }
tracing-subscriber = { version = "0.3", features = ["parking_lot", "env-filter"] }
tracing-futures = "0.2" # needed so intrument works with async functions.
# Library helper (builder pattern)
typed-builder = "0.10"

[profile.release]
lto = true
opt-level = 3 # 's' to optimize for size or 'z' to optimize "aggressively" for size
codegen-units = 1

[package.metadata.cargo-machete]
ignored = ["tracing-futures", "chrono"]
