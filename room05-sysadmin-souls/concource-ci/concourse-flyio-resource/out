#!/usr/bin/env python3
from json import (load, loads, dumps)
from sys import (stdin, stderr, argv)
from subprocess import (run)

def _out(instream, src='.'):
    payload = load(instream)
    source = payload["source"]
    # TODO: Accept deployement params
    # build-arg stringArray
    # build-secret stringArray
    # env stringArray
    # only-regions strings
    # no-cache
    # region string
    # strategy string
    params = payload["params"] if "params" in payload else {}

    api_key = source["api_key"]
    app_name = source["app_name"]
    config = f" --config='{source["config"]}' " if "config" in source else ""

    dir = params["dir"] if "dir" in params else ""

    current_dir = f"{src}/{dir}"

    # Deploy
    run(
        f"flyctl deploy --access-token='{api_key}' --app='{app_name}'{config}",
        shell=True,
        cwd=current_dir,
        stdout=stderr,
        text=True,
    ).check_returncode()

    # Check deployed version
    check_result = run(
        f"flyctl status --json --access-token='{api_key}' --app='{app_name}'",
        shell=True,
        capture_output=True,
        text=True,
    )
    print(check_result.stderr, file=stderr)
    app_status = loads(check_result.stdout)

    return {
        "version": { "version": str(app_status["Version"]) },
        "metadata": [],
    }

if __name__ == "__main__":
    print(dumps(_out(stdin, argv[1]), separators=[",", ":"]))
